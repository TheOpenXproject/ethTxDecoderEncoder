[
  "function createPair(address tokenA, address tokenB) returns (address pair) ",
  "function pairCodeHash() pure returns (bytes32) ",
  "function setFeeTo(address _feeTo) ",
  "function setFeeToSetter(address _feeToSetter) ",
  "function addLiquidity(address tokenA, address tokenB, uint256 amountADesired, uint256 amountBDesired, uint256 amountAMin, uint256 amountBMin, address to, uint256 deadline) returns (uint256 amountA, uint256 amountB, uint256 liquidity) ",
  "function addLiquidityETH(address token, uint256 amountTokenDesired, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline) payable returns (uint256 amountToken, uint256 amountETH, uint256 liquidity) ",
  "function getAmountIn(uint256 amountOut, uint256 reserveIn, uint256 reserveOut) pure returns (uint256 amountIn) ",
  "function getAmountOut(uint256 amountIn, uint256 reserveIn, uint256 reserveOut) pure returns (uint256 amountOut) ",
  "function quote(uint256 amountA, uint256 reserveA, uint256 reserveB) pure returns (uint256 amountB) ",
  "function removeLiquidity(address tokenA, address tokenB, uint256 liquidity, uint256 amountAMin, uint256 amountBMin, address to, uint256 deadline) returns (uint256 amountA, uint256 amountB) ",
  "function removeLiquidityETH(address token, uint256 liquidity, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline) returns (uint256 amountToken, uint256 amountETH) ",
  "function removeLiquidityETHSupportingFeeOnTransferTokens(address token, uint256 liquidity, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline) returns (uint256 amountETH) ",
  "function removeLiquidityETHWithPermit(address token, uint256 liquidity, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) returns (uint256 amountToken, uint256 amountETH) ",
  "function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address token, uint256 liquidity, uint256 amountTokenMin, uint256 amountETHMin, address to, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) returns (uint256 amountETH) ",
  "function removeLiquidityWithPermit(address tokenA, address tokenB, uint256 liquidity, uint256 amountAMin, uint256 amountBMin, address to, uint256 deadline, bool approveMax, uint8 v, bytes32 r, bytes32 s) returns (uint256 amountA, uint256 amountB) ",
  "function swapETHForExactTokens(uint256 amountOut, address[] path, address to, uint256 deadline) payable returns (uint256[] amounts) ",
  "function swapExactETHForTokens(uint256 amountOutMin, address[] path, address to, uint256 deadline) payable returns (uint256[] amounts) ",
  "function swapExactETHForTokensSupportingFeeOnTransferTokens(uint256 amountOutMin, address[] path, address to, uint256 deadline) payable ",
  "function swapExactTokensForETH(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline) returns (uint256[] amounts) ",
  "function swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline) ",
  "function swapExactTokensForTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline) returns (uint256[] amounts) ",
  "function swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 amountIn, uint256 amountOutMin, address[] path, address to, uint256 deadline) ",
  "function swapTokensForExactETH(uint256 amountOut, uint256 amountInMax, address[] path, address to, uint256 deadline) returns (uint256[] amounts) ",
  "function swapTokensForExactTokens(uint256 amountOut, uint256 amountInMax, address[] path, address to, uint256 deadline) returns (uint256[] amounts) ",
  "function add(uint256 allocPoint, address _lpToken, address _rewarder) ",
  "function batch(bytes[] calls, bool revertOnFail) payable returns (bool[] successes, bytes[] results) ",
  "function claimOwnership() ",
  "function deposit(uint256 pid, uint256 amount, address to) ",
  "function emergencyWithdraw(uint256 pid, address to) ",
  "function harvest(uint256 pid, address to) ",
  "function massUpdatePools(uint256[] pids) ",
  "function permitToken(address token, address from, address to, uint256 amount, uint256 deadline, uint8 v, bytes32 r, bytes32 s) ",
  "function rewardsPerSecond() pure returns (uint256 amount) ",
  "function set(uint256 _pid, uint256 _allocPoint, address _rewarder, bool overwrite) ",
  "function transferOwnership(address newOwner, bool direct, bool renounce) ",
  "function updatePool(uint256 pid) returns (tuple(address lpToken, uint128 accSushiPerShare, uint64 lastRewardTimestamp, uint64 allocPoint) pool) ",
  "function withdraw(uint256 pid, uint256 amount, address to) ",
  "function withdrawAndHarvest(uint256 pid, uint256 amount, address to) ",
  "function add(uint256 _allocPoint, address _lpToken, bool _withUpdate) ",
  "function deposit(uint256 _pid, uint256 _amount) ",
  "function dev(address _devaddr) ",
  "function emergencyWithdraw(uint256 _pid) ",
  "function massUpdatePools() ",
  "function migrate(uint256 _pid) ",
  "function renounceOwnership() ",
  "function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) ",
  "function setMigrator(address _migrator) ",
  "function transferOwnership(address newOwner) ",
  "function withdraw(uint256 _pid, uint256 _amount) ",
  "function approve(address spender, uint256 amount) returns (bool) ",
  "function burn(uint256 _amount) ",
  "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool) ",
  "function increaseAllowance(address spender, uint256 addedValue) returns (bool) ",
  "function transfer(address recipient, uint256 amount) returns (bool) ",
  "function transferFrom(address sender, address recipient, uint256 amount) returns (bool) ",
  "function init() ",
  "function recoverETH() ",
  "function recoverToken(address tokenAddr) ",
  "function sendPayment() ",
  "function aggregate(tuple(address target, bytes callData)[] calls) returns (uint256 blockNumber, bytes[] returnData) ",
  "function blockAndAggregate(tuple(address target, bytes callData)[] calls) returns (uint256 blockNumber, bytes32 blockHash, tuple(bool success, bytes returnData)[] returnData) ",
  "function tryAggregate(bool requireSuccess, tuple(address target, bytes callData)[] calls) returns (tuple(bool success, bytes returnData)[] returnData) ",
  "function tryBlockAndAggregate(bool requireSuccess, tuple(address target, bytes callData)[] calls) returns (uint256 blockNumber, bytes32 blockHash, tuple(bool success, bytes returnData)[] returnData) "
]